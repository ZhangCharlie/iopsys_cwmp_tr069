/*
 *      This program is free software: you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published by
 *      the Free Software Foundation, either version 2 of the License, or
 *      (at your option) any later version.
 *
 *      Copyright (C) 2019 iopsys Software Solutions AB
 *		Author: Amin Ben Ramdhane <amin.benramdhane@pivasoftware.com>
 */

#ifndef __ROOTINTERNETGATEWAYDEVICE_H
#define __ROOTINTERNETGATEWAYDEVICE_H

extern DMOBJ  tRootInternetGatewayDeviceObj[];
extern DMLEAF tRootInternetGatewayDeviceParams[];
extern DMOBJ  tCapabilitiesObj[];
extern DMLEAF tCapabilitiesPerformanceDiagnosticParams[];
extern DMOBJ  tDeviceInfoObj[];
extern DMLEAF tDeviceInfoParams[];
extern DMLEAF tDeviceInfoVendorConfigFileParams[];
extern DMLEAF tDeviceInfoMemoryStatusParams[];
extern DMOBJ  tDeviceInfoProcessStatusObj[];
extern DMLEAF tDeviceInfoProcessStatusParams[];
extern DMLEAF tDeviceInfoProcessStatusProcessParams[];
extern DMOBJ  tDeviceInfoTemperatureStatusObj[];
extern DMLEAF tDeviceInfoTemperatureStatusParams[];
extern DMLEAF tDeviceInfoTemperatureStatusTemperatureSensorParams[];
extern DMLEAF tDeviceInfoNetworkPropertiesParams[];
extern DMLEAF tDeviceInfoSupportedDataModelParams[];
extern DMLEAF tDeviceInfoProcessorParams[];
extern DMLEAF tDeviceInfoVendorLogFileParams[];
extern DMLEAF tDeviceInfoProxierInfoParams[];
extern DMLEAF tDeviceInfoLocationParams[];
extern DMLEAF tDeviceConfigParams[];
extern DMOBJ  tManagementServerObj[];
extern DMLEAF tManagementServerParams[];
extern DMLEAF tManagementServerManageableDeviceParams[];
extern DMLEAF tManagementServerAutonomousTransferCompletePolicyParams[];
extern DMLEAF tManagementServerDUStateChangeComplPolicyParams[];
extern DMLEAF tManagementServerEmbeddedDeviceParams[];
extern DMLEAF tManagementServerVirtualDeviceParams[];
extern DMLEAF tManagementServerStandbyPolicyParams[];
extern DMLEAF tManagementServerInformParameterParams[];
extern DMLEAF tTimeParams[];
extern DMOBJ  tUserInterfaceObj[];
extern DMLEAF tUserInterfaceParams[];
extern DMLEAF tUserInterfaceRemoteAccessParams[];
extern DMLEAF tUserInterfaceLocalDisplayParams[];
extern DMLEAF tCaptivePortalParams[];
extern DMOBJ  tLayer3ForwardingObj[];
extern DMLEAF tLayer3ForwardingParams[];
extern DMLEAF tLayer3ForwardingForwardingParams[];
extern DMOBJ  tLayer2BridgingObj[];
extern DMLEAF tLayer2BridgingParams[];
extern DMOBJ  tLayer2BridgingBridgeObj[];
extern DMLEAF tLayer2BridgingBridgeParams[];
extern DMLEAF tLayer2BridgingBridgePortParams[];
extern DMLEAF tLayer2BridgingBridgeVLANParams[];
extern DMLEAF tLayer2BridgingFilterParams[];
extern DMLEAF tLayer2BridgingMarkingParams[];
extern DMLEAF tLayer2BridgingAvailableInterfaceParams[];
extern DMOBJ  tQueueManagementObj[];
extern DMLEAF tQueueManagementParams[];
extern DMLEAF tQueueManagementClassificationParams[];
extern DMLEAF tQueueManagementAppParams[];
extern DMLEAF tQueueManagementFlowParams[];
extern DMLEAF tQueueManagementPolicerParams[];
extern DMLEAF tQueueManagementQueueParams[];
extern DMLEAF tQueueManagementQueueStatsParams[];
extern DMLEAF tLANConfigSecurityParams[];
extern DMLEAF tIPPingDiagnosticsParams[];
extern DMOBJ  tTraceRouteDiagnosticsObj[];
extern DMLEAF tTraceRouteDiagnosticsParams[];
extern DMLEAF tTraceRouteDiagnosticsRouteHopsParams[];
extern DMLEAF tDownloadDiagnosticsParams[];
extern DMLEAF tUploadDiagnosticsParams[];
extern DMLEAF tUDPEchoConfigParams[];
extern DMOBJ  tLANDeviceObj[];
extern DMLEAF tLANDeviceParams[];
extern DMOBJ  tLANDeviceLANHostConfigManagementObj[];
extern DMLEAF tLANDeviceLANHostConfigManagementParams[];
extern DMLEAF tLANDeviceLANHostConfigManagementIPInterfaceParams[];
extern DMLEAF tLANDeviceLANHostConfigManagementDHCPStaticAddressParams[];
extern DMLEAF tLANDeviceLANHostConfigManagementDHCPOptionParams[];
extern DMOBJ  tLANDeviceLANHostConfigManagementDHCPConditionalServingPoolObj[];
extern DMLEAF tLANDeviceLANHostConfigManagementDHCPConditionalServingPoolParams[];
extern DMLEAF tLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddressParams[];
extern DMLEAF tLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOptionParams[];
extern DMOBJ  tLANDeviceLANEthernetInterfaceConfigObj[];
extern DMLEAF tLANDeviceLANEthernetInterfaceConfigParams[];
extern DMLEAF tLANDeviceLANEthernetInterfaceConfigStatsParams[];
extern DMOBJ  tLANDeviceLANUSBInterfaceConfigObj[];
extern DMLEAF tLANDeviceLANUSBInterfaceConfigParams[];
extern DMLEAF tLANDeviceLANUSBInterfaceConfigStatsParams[];
extern DMOBJ  tLANDeviceWLANConfigurationObj[];
extern DMLEAF tLANDeviceWLANConfigurationParams[];
extern DMLEAF tLANDeviceWLANConfigurationAssociatedDeviceParams[];
extern DMLEAF tLANDeviceWLANConfigurationWEPKeyParams[];
extern DMLEAF tLANDeviceWLANConfigurationPreSharedKeyParams[];
extern DMLEAF tLANDeviceWLANConfigurationAPWMMParameterParams[];
extern DMLEAF tLANDeviceWLANConfigurationSTAWMMParameterParams[];
extern DMLEAF tLANDeviceWLANConfigurationStatsParams[];
extern DMOBJ  tLANDeviceWLANConfigurationWPSObj[];
extern DMLEAF tLANDeviceWLANConfigurationWPSParams[];
extern DMLEAF tLANDeviceWLANConfigurationWPSRegistrarParams[];
extern DMOBJ  tLANDeviceHostsObj[];
extern DMLEAF tLANDeviceHostsParams[];
extern DMLEAF tLANDeviceHostsHostParams[];
extern DMOBJ  tLANInterfacesObj[];
extern DMLEAF tLANInterfacesParams[];
extern DMLEAF tLANInterfacesLANEthernetInterfaceConfigParams[];
extern DMLEAF tLANInterfacesLANUSBInterfaceConfigParams[];
extern DMLEAF tLANInterfacesWLANConfigurationParams[];
extern DMOBJ  tWANDeviceObj[];
extern DMLEAF tWANDeviceParams[];
extern DMOBJ  tWANDeviceWANCommonInterfaceConfigObj[];
extern DMLEAF tWANDeviceWANCommonInterfaceConfigParams[];
extern DMLEAF tWANDeviceWANCommonInterfaceConfigConnectionParams[];
extern DMOBJ  tWANDeviceWANDSLInterfaceConfigObj[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigParams[];
extern DMOBJ  tWANDeviceWANDSLInterfaceConfigStatsObj[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigStatsTotalParams[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigStatsShowtimeParams[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigStatsLastShowtimeParams[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigStatsCurrentDayParams[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigStatsQuarterHourParams[];
extern DMLEAF tWANDeviceWANDSLInterfaceConfigTestParamsParams[];
extern DMOBJ  tWANDeviceWANEthernetInterfaceConfigObj[];
extern DMLEAF tWANDeviceWANEthernetInterfaceConfigParams[];
extern DMLEAF tWANDeviceWANEthernetInterfaceConfigStatsParams[];
extern DMOBJ  tWANDeviceWANDSLConnectionManagementObj[];
extern DMLEAF tWANDeviceWANDSLConnectionManagementParams[];
extern DMLEAF tWANDeviceWANDSLConnectionManagementConnectionServiceParams[];
extern DMLEAF tWANDeviceWANDSLDiagnosticsParams[];
extern DMOBJ  tWANDeviceWANConnectionDeviceObj[];
extern DMLEAF tWANDeviceWANConnectionDeviceParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANDSLLinkConfigParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnosticsParams[];
extern DMOBJ  tWANDeviceWANConnectionDeviceWANPTMLinkConfigObj[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPTMLinkConfigParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPTMLinkConfigStatsParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANEthernetLinkConfigParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPOTSLinkConfigParams[];
extern DMOBJ  tWANDeviceWANConnectionDeviceWANIPConnectionObj[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionParams[];
extern DMOBJ  tWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientObj[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOptionParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOptionParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionPortMappingParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANIPConnectionStatsParams[];
extern DMOBJ  tWANDeviceWANConnectionDeviceWANPPPConnectionObj[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPPPConnectionParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPPPConnectionPortMappingParams[];
extern DMLEAF tWANDeviceWANConnectionDeviceWANPPPConnectionStatsParams[];
extern DMLEAF tUserParams[];
extern DMOBJ  tUPnPObj[];
extern DMOBJ  tUPnPDeviceObj[];
extern DMLEAF tUPnPDeviceParams[];
extern DMLEAF tUPnPDeviceCapabilitiesParams[];
extern DMOBJ  tUPnPDiscoveryObj[];
extern DMLEAF tUPnPDiscoveryParams[];
extern DMLEAF tUPnPDiscoveryRootDeviceParams[];
extern DMLEAF tUPnPDiscoveryDeviceParams[];
extern DMLEAF tUPnPDiscoveryServiceParams[];
extern DMOBJ  tUPnPDescriptionObj[];
extern DMLEAF tUPnPDescriptionParams[];
extern DMLEAF tUPnPDescriptionDeviceDescriptionParams[];
extern DMLEAF tUPnPDescriptionDeviceInstanceParams[];
extern DMLEAF tUPnPDescriptionServiceInstanceParams[];
extern DMOBJ  tDLNAObj[];
extern DMLEAF tDLNACapabilitiesParams[];
extern DMOBJ  tSmartCardReaderObj[];
extern DMLEAF tSmartCardReaderParams[];
extern DMLEAF tSmartCardReaderSmartCardParams[];
extern DMLEAF tSelfTestDiagnosticsParams[];
extern DMOBJ  tNSLookupDiagnosticsObj[];
extern DMLEAF tNSLookupDiagnosticsParams[];
extern DMLEAF tNSLookupDiagnosticsResultParams[];
extern DMLEAF tFirewallParams[];
extern DMOBJ  tUSBHostsObj[];
extern DMLEAF tUSBHostsParams[];
extern DMOBJ  tUSBHostsHostObj[];
extern DMLEAF tUSBHostsHostParams[];
extern DMOBJ  tUSBHostsHostDeviceObj[];
extern DMLEAF tUSBHostsHostDeviceParams[];
extern DMOBJ  tUSBHostsHostDeviceConfigurationObj[];
extern DMLEAF tUSBHostsHostDeviceConfigurationParams[];
extern DMLEAF tUSBHostsHostDeviceConfigurationInterfaceParams[];
extern DMOBJ  tPeriodicStatisticsObj[];
extern DMLEAF tPeriodicStatisticsParams[];
extern DMOBJ  tPeriodicStatisticsSampleSetObj[];
extern DMLEAF tPeriodicStatisticsSampleSetParams[];
extern DMLEAF tPeriodicStatisticsSampleSetParameterParams[];
extern DMOBJ  tDownloadAvailabilityObj[];
extern DMOBJ  tDownloadAvailabilityAnnouncementObj[];
extern DMLEAF tDownloadAvailabilityAnnouncementParams[];
extern DMLEAF tDownloadAvailabilityAnnouncementGroupParams[];
extern DMLEAF tDownloadAvailabilityQueryParams[];
extern DMOBJ  tSoftwareModulesObj[];
extern DMLEAF tSoftwareModulesParams[];
extern DMLEAF tSoftwareModulesExecEnvParams[];
extern DMLEAF tSoftwareModulesDeploymentUnitParams[];
extern DMOBJ  tSoftwareModulesExecutionUnitObj[];
extern DMLEAF tSoftwareModulesExecutionUnitParams[];
extern DMOBJ  tSecurityObj[];
extern DMLEAF tSecurityParams[];
extern DMLEAF tSecurityCertificateParams[];
extern DMOBJ  tFaultMgmtObj[];
extern DMLEAF tFaultMgmtParams[];
extern DMLEAF tFaultMgmtSupportedAlarmParams[];
extern DMLEAF tFaultMgmtCurrentAlarmParams[];
extern DMLEAF tFaultMgmtHistoryEventParams[];
extern DMLEAF tFaultMgmtExpeditedEventParams[];
extern DMLEAF tFaultMgmtQueuedEventParams[];
extern DMOBJ  tFAPObj[];
extern DMOBJ  tFAPGPSObj[];
extern DMLEAF tFAPGPSParams[];
extern DMLEAF tFAPGPSContinuousGPSStatusParams[];
extern DMLEAF tFAPGPSAGPSServerConfigParams[];
extern DMOBJ  tFAPTunnelObj[];
extern DMLEAF tFAPTunnelParams[];
extern DMLEAF tFAPTunnelCryptoProfileParams[];
extern DMLEAF tFAPTunnelIKESAParams[];
extern DMLEAF tFAPTunnelChildSAParams[];
extern DMLEAF tFAPTunnelVirtualInterfaceParams[];
extern DMOBJ  tFAPPerfMgmtObj[];
extern DMLEAF tFAPPerfMgmtParams[];
extern DMLEAF tFAPPerfMgmtConfigParams[];
extern DMOBJ  tFAPApplicationPlatformObj[];
extern DMLEAF tFAPApplicationPlatformParams[];
extern DMLEAF tFAPApplicationPlatformCapabilitiesParams[];
extern DMOBJ  tFAPApplicationPlatformControlObj[];
extern DMLEAF tFAPApplicationPlatformControlParams[];
extern DMLEAF tFAPApplicationPlatformControlFemtoAwarenessParams[];
extern DMLEAF tFAPApplicationPlatformControlSMSParams[];
extern DMLEAF tFAPApplicationPlatformControlMMSParams[];
extern DMLEAF tFAPApplicationPlatformControlTerminalLocationParams[];
extern DMOBJ  tFAPApplicationPlatformMonitoringObj[];
extern DMLEAF tFAPApplicationPlatformMonitoringParams[];
extern DMLEAF tFAPApplicationPlatformMonitoringFemtoAwarenessParams[];
extern DMLEAF tFAPApplicationPlatformMonitoringSMSParams[];
extern DMLEAF tFAPApplicationPlatformMonitoringMMSParams[];
extern DMLEAF tFAPApplicationPlatformMonitoringTerminalLocationParams[];
extern DMOBJ  tBulkDataObj[];
extern DMLEAF tBulkDataParams[];
extern DMOBJ  tBulkDataProfileObj[];
extern DMLEAF tBulkDataProfileParams[];
extern DMLEAF tBulkDataProfileParameterParams[];
extern DMOBJ  tDNSObj[];
extern DMOBJ  tDNSSDObj[];
extern DMLEAF tDNSSDParams[];
extern DMOBJ  tDNSSDServiceObj[];
extern DMLEAF tDNSSDServiceParams[];
extern DMLEAF tDNSSDServiceTextRecordParams[];
extern DMOBJ  tXMPPObj[];
extern DMLEAF tXMPPParams[];
extern DMOBJ  tXMPPConnectionObj[];
extern DMLEAF tXMPPConnectionParams[];
extern DMLEAF tXMPPConnectionServerParams[];
extern DMLEAF tXMPPConnectionStatsParams[];

int browseLANDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUserInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseSmartCardReaderInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoVendorConfigFileInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoSupportedDataModelInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoProcessorInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoVendorLogFileInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoLocationInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoProcessStatusProcessInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDeviceInfoTemperatureStatusTemperatureSensorInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseManagementServerManageableDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseManagementServerEmbeddedDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseManagementServerVirtualDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseManagementServerInformParameterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer3ForwardingForwardingInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingBridgeInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingFilterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingMarkingInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingAvailableInterfaceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingBridgePortInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLayer2BridgingBridgeVLANInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementClassificationInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementAppInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementFlowInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementPolicerInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementQueueInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseQueueManagementQueueStatsInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseTraceRouteDiagnosticsRouteHopsInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANEthernetInterfaceConfigInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANUSBInterfaceConfigInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementIPInterfaceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementDHCPStaticAddressInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementDHCPOptionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementDHCPConditionalServingPoolInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddressInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOptionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationAssociatedDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationWEPKeyInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationPreSharedKeyInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationAPWMMParameterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationSTAWMMParameterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceWLANConfigurationWPSRegistrarInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANDeviceHostsHostInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANInterfacesLANEthernetInterfaceConfigInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANInterfacesLANUSBInterfaceConfigInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseLANInterfacesWLANConfigurationInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANCommonInterfaceConfigConnectionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANDSLConnectionManagementConnectionServiceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANIPConnectionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANPPPConnectionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANIPConnectionPortMappingInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOptionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOptionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseWANDeviceWANConnectionDeviceWANPPPConnectionPortMappingInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDiscoveryRootDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDiscoveryDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDiscoveryServiceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDescriptionDeviceDescriptionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDescriptionDeviceInstanceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUPnPDescriptionServiceInstanceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseNSLookupDiagnosticsResultInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUSBHostsHostInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUSBHostsHostDeviceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUSBHostsHostDeviceConfigurationInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseUSBHostsHostDeviceConfigurationInterfaceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browsePeriodicStatisticsSampleSetInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browsePeriodicStatisticsSampleSetParameterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDownloadAvailabilityAnnouncementGroupInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseSoftwareModulesExecEnvInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseSoftwareModulesDeploymentUnitInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseSoftwareModulesExecutionUnitInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseSecurityCertificateInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFaultMgmtSupportedAlarmInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFaultMgmtCurrentAlarmInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFaultMgmtHistoryEventInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFaultMgmtExpeditedEventInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFaultMgmtQueuedEventInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFAPTunnelCryptoProfileInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFAPTunnelIKESAInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFAPTunnelChildSAInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFAPTunnelVirtualInterfaceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseFAPPerfMgmtConfigInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseBulkDataProfileInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseBulkDataProfileParameterInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDNSSDServiceInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseDNSSDServiceTextRecordInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseXMPPConnectionInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);
int browseXMPPConnectionServerInst(struct dmctx *dmctx, DMNODE *parent_node, void *prev_data, char *prev_instance);

int addObjLANDevice(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjUser(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjUser(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjDeviceInfoLocation(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjDeviceInfoLocation(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjManagementServerInformParameter(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjManagementServerInformParameter(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer3ForwardingForwarding(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer3ForwardingForwarding(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer2BridgingBridge(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer2BridgingBridge(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer2BridgingFilter(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer2BridgingFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer2BridgingMarking(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer2BridgingMarking(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer2BridgingBridgePort(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer2BridgingBridgePort(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLayer2BridgingBridgeVLAN(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLayer2BridgingBridgeVLAN(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementClassification(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementClassification(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementApp(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementApp(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementFlow(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementFlow(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementPolicer(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementQueue(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjQueueManagementQueueStats(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjQueueManagementQueueStats(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementIPInterface(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementIPInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementDHCPStaticAddress(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementDHCPStaticAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementDHCPOption(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementDHCPOption(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementDHCPConditionalServingPool(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementDHCPConditionalServingPool(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjLANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDevice(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANIPConnection(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANIPConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANPPPConnection(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANPPPConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANIPConnectionPortMapping(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANIPConnectionPortMapping(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjWANDeviceWANConnectionDeviceWANPPPConnectionPortMapping(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjWANDeviceWANConnectionDeviceWANPPPConnectionPortMapping(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjPeriodicStatisticsSampleSet(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjPeriodicStatisticsSampleSet(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjPeriodicStatisticsSampleSetParameter(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjPeriodicStatisticsSampleSetParameter(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjDownloadAvailabilityAnnouncementGroup(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjDownloadAvailabilityAnnouncementGroup(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjFAPTunnelCryptoProfile(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjFAPTunnelCryptoProfile(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjFAPTunnelVirtualInterface(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjFAPTunnelVirtualInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjFAPPerfMgmtConfig(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjFAPPerfMgmtConfig(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjBulkDataProfile(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjBulkDataProfile(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjBulkDataProfileParameter(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjBulkDataProfileParameter(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjXMPPConnection(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjXMPPConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);
int addObjXMPPConnectionServer(char *refparam, struct dmctx *ctx, void *data, char **instance);
int delObjXMPPConnectionServer(char *refparam, struct dmctx *ctx, void *data, char *instance, unsigned char del_action);

int get_RootInternetGatewayDevice_DeviceSummary(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_RootInternetGatewayDevice_LANDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_RootInternetGatewayDevice_WANDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_RootInternetGatewayDevice_UserNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_RootInternetGatewayDevice_SmartCardReaderNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_CapabilitiesPerformanceDiagnostic_DownloadTransports(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_CapabilitiesPerformanceDiagnostic_UploadTransports(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_DeviceCategory(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_Manufacturer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ManufacturerOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ModelName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ModelNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_Description(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ProductClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_HardwareVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_SoftwareVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ModemFirmwareVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_EnabledOptions(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_AdditionalHardwareVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_AdditionalSoftwareVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_SpecVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ProvisioningCode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfo_ProvisioningCode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfo_UpTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_FirstUseDate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_DeviceLog(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_VendorConfigFileNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_SupportedDataModelNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_ProcessorNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_VendorLogFileNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfo_LocationNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorConfigFile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoVendorConfigFile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoVendorConfigFile_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorConfigFile_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorConfigFile_Date(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorConfigFile_Description(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoMemoryStatus_Total(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoMemoryStatus_Free(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatus_CPUUsage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatus_ProcessNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_PID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_Command(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_Size(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_Priority(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_CPUTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessStatusProcess_State(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatus_TemperatureSensorNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_ResetTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_LastUpdate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_MinValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_MinTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_MaxValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_MaxTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_LowAlarmValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_LowAlarmValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_LowAlarmTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoTemperatureStatusTemperatureSensor_HighAlarmValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_HighAlarmValue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_PollingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoTemperatureStatusTemperatureSensor_PollingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoTemperatureStatusTemperatureSensor_HighAlarmTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoNetworkProperties_MaxTCPWindowSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoNetworkProperties_TCPImplementation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoSupportedDataModel_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoSupportedDataModel_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoSupportedDataModel_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoSupportedDataModel_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoSupportedDataModel_URN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoSupportedDataModel_Features(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProcessor_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoProcessor_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoProcessor_Architecture(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorLogFile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoVendorLogFile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceInfoVendorLogFile_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorLogFile_MaximumSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoVendorLogFile_Persistent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProxierInfo_ManufacturerOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProxierInfo_ProductClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProxierInfo_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoProxierInfo_ProxyProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoLocation_Source(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoLocation_AcquiredTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoLocation_ExternalSource(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoLocation_ExternalProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DeviceInfoLocation_DataObject(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceInfoLocation_DataObject(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceConfig_PersistentData(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceConfig_PersistentData(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DeviceConfig_ConfigFile(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DeviceConfig_ConfigFile(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_EnableCWMP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_EnableCWMP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_PeriodicInformEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_PeriodicInformEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_PeriodicInformInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_PeriodicInformInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_PeriodicInformTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_PeriodicInformTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_ParameterKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_ConnectionRequestURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_ConnectionRequestUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_ConnectionRequestUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_ConnectionRequestPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_ConnectionRequestPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_UpgradesManaged(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_UpgradesManaged(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_KickURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_DownloadProgressURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_DefaultActiveNotificationThrottle(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_DefaultActiveNotificationThrottle(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_UDPConnectionRequestAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_UDPConnectionRequestAddressNotificationLimit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_UDPConnectionRequestAddressNotificationLimit(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNServerAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNServerAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNServerPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNServerPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNMaximumKeepAlivePeriod(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNMaximumKeepAlivePeriod(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_STUNMinimumKeepAlivePeriod(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_STUNMinimumKeepAlivePeriod(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_NATDetected(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_AliasBasedAddressing(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_InstanceMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_InstanceMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_AutoCreateInstances(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_AutoCreateInstances(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_CWMPRetryMinimumWaitInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_CWMPRetryMinimumWaitInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_CWMPRetryIntervalMultiplier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_CWMPRetryIntervalMultiplier(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_ManageableDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_ManageableDeviceNotificationLimit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_ManageableDeviceNotificationLimit(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_EmbeddedDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_VirtualDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_SupportedConnReqMethods(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_ConnReqXMPPConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_ConnReqXMPPConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_ConnReqAllowedJabberIDs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_ConnReqAllowedJabberIDs(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_ConnReqJabberID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_HTTPCompressionSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_HTTPCompression(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_HTTPCompression(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_LightweightNotificationProtocolsSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServer_LightweightNotificationProtocolsUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_LightweightNotificationProtocolsUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_UDPLightweightNotificationHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_UDPLightweightNotificationHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_UDPLightweightNotificationPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServer_UDPLightweightNotificationPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServer_InformParameterNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerManageableDevice_ManufacturerOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerManageableDevice_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerManageableDevice_ProductClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerManageableDevice_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerAutonomousTransferCompletePolicy_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerAutonomousTransferCompletePolicy_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerAutonomousTransferCompletePolicy_TransferTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerAutonomousTransferCompletePolicy_TransferTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerAutonomousTransferCompletePolicy_ResultTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerAutonomousTransferCompletePolicy_ResultTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerAutonomousTransferCompletePolicy_FileTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerAutonomousTransferCompletePolicy_FileTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerDUStateChangeComplPolicy_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerDUStateChangeComplPolicy_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerDUStateChangeComplPolicy_OperationTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerDUStateChangeComplPolicy_OperationTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerDUStateChangeComplPolicy_ResultTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerDUStateChangeComplPolicy_ResultTypeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerDUStateChangeComplPolicy_FaultCodeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerDUStateChangeComplPolicy_FaultCodeFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerEmbeddedDevice_ControllerID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_ProxiedDeviceID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_Reference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_SupportedDataModel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_ProxyProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_ProxyProtocolReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_DiscoveryProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_DiscoveryProtocolReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_CommandProcessed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_CommandProcessingErrMsg(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerEmbeddedDevice_LastSyncTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_ManufacturerOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_ProductClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_ProxyProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_ProxyProtocolReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_DiscoveryProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerVirtualDevice_DiscoveryProtocolReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerStandbyPolicy_CRUnawarenessMaxDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_CRUnawarenessMaxDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerStandbyPolicy_MaxMissedPeriodic(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_MaxMissedPeriodic(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerStandbyPolicy_NotifyMissedScheduled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_NotifyMissedScheduled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerStandbyPolicy_NetworkAwarenessCapable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerStandbyPolicy_SelfTimerCapable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_ManagementServerStandbyPolicy_CRAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_CRAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerStandbyPolicy_PeriodicAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_PeriodicAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerStandbyPolicy_ScheduledAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerStandbyPolicy_ScheduledAwarenessRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerInformParameter_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerInformParameter_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerInformParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerInformParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerInformParameter_ParameterName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerInformParameter_ParameterName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_ManagementServerInformParameter_EventList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_ManagementServerInformParameter_EventList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Time_NTPServer1(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_NTPServer1(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_NTPServer2(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_NTPServer2(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_NTPServer3(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_NTPServer3(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_NTPServer4(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_NTPServer4(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_NTPServer5(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_NTPServer5(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_CurrentLocalTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Time_LocalTimeZone(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_LocalTimeZone(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_LocalTimeZoneName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_LocalTimeZoneName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_DaylightSavingsUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_DaylightSavingsUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_DaylightSavingsStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_DaylightSavingsStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Time_DaylightSavingsEnd(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Time_DaylightSavingsEnd(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_UserDatabaseSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UserInterface_SharedPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_SharedPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_PasswordRequired(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_PasswordRequired(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_PasswordUserSelectable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_PasswordUserSelectable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_UpgradeAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_UpgradeAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_WarrantyDate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_WarrantyDate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPHelpDesk(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPHelpDesk(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPHomePage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPHomePage(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPHelpPage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPHelpPage(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPLogo(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPLogo(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPLogoSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPLogoSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPMailServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPMailServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ISPNewsServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ISPNewsServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_TextColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_TextColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_BackgroundColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_BackgroundColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ButtonColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ButtonColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ButtonTextColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ButtonTextColor(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_AutoUpdateServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_AutoUpdateServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_UserUpdateServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_UserUpdateServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ExampleLogin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ExampleLogin(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_ExamplePassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_ExamplePassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterface_AvailableLanguages(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UserInterface_CurrentLanguage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterface_CurrentLanguage(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceRemoteAccess_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceRemoteAccess_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceRemoteAccess_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceRemoteAccess_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceRemoteAccess_SupportedProtocols(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UserInterfaceRemoteAccess_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceRemoteAccess_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_Movable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_Movable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_Resizable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_Resizable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_PosX(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_PosX(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_PosY(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_PosY(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_Width(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_Width(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_Height(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UserInterfaceLocalDisplay_Height(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UserInterfaceLocalDisplay_DisplayWidth(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UserInterfaceLocalDisplay_DisplayHeight(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_CaptivePortal_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_CaptivePortal_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_CaptivePortal_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_CaptivePortal_AllowedList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_CaptivePortal_AllowedList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_CaptivePortal_CaptivePortalURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_CaptivePortal_CaptivePortalURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3Forwarding_DefaultConnectionService(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3Forwarding_DefaultConnectionService(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3Forwarding_ForwardNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer3ForwardingForwarding_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer3ForwardingForwarding_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_StaticRoute(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer3ForwardingForwarding_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_DestIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_DestIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_DestSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_DestSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_SourceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_SourceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_SourceSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_SourceSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_ForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_ForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_GatewayIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_GatewayIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_ForwardingMetric(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_ForwardingMetric(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer3ForwardingForwarding_MTU(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer3ForwardingForwarding_MTU(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2Bridging_MaxBridgeEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MaxDBridgeEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MaxQBridgeEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MaxVLANEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MaxFilterEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MaxMarkingEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_BridgeNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_FilterNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_MarkingNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2Bridging_AvailableInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridge_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridge_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridge_BridgeKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridge_BridgeStandard(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridge_BridgeStandard(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridge_BridgeEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridge_BridgeEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridge_BridgeStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridge_BridgeName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridge_BridgeName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridge_VLANID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridge_VLANID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridge_PortNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridge_VLANNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridgePort_PortEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_PortEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgePort_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgePort_PortInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_PortInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgePort_PortState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingBridgePort_PVID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_PVID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgePort_AcceptableFrameTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_AcceptableFrameTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgePort_IngressFiltering(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgePort_IngressFiltering(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgeVLAN_VLANEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgeVLAN_VLANEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgeVLAN_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgeVLAN_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgeVLAN_VLANName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgeVLAN_VLANName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingBridgeVLAN_VLANID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingBridgeVLAN_VLANID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_FilterKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingFilter_FilterEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_FilterEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_FilterStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingFilter_FilterBridgeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_FilterBridgeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_ExclusivityOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_ExclusivityOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_FilterInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_FilterInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_VLANIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_VLANIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_AdmitOnlyVLANTagged(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_AdmitOnlyVLANTagged(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_EthertypeFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_EthertypeFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_EthertypeFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_EthertypeFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACAddressFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACAddressFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACAddressFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACAddressFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACAddressFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACAddressFilterList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACAddressFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACAddressFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromVendorClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromVendorClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromVendorClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromVendorClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromVendorClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromVendorClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromVendorClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromVendorClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromClientIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromClientIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromClientIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromClientIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromClientIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromClientIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromClientIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromClientIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromUserClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromUserClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_SourceMACFromUserClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_SourceMACFromUserClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromUserClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromUserClassIDFilter(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingFilter_DestMACFromUserClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingFilter_DestMACFromUserClassIDFilterExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_MarkingKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingMarking_MarkingEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_MarkingEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_MarkingStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingMarking_MarkingBridgeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_MarkingBridgeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_MarkingInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_MarkingInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_VLANIDUntag(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_VLANIDUntag(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_VLANIDMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_VLANIDMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_VLANIDMarkOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_VLANIDMarkOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_EthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_EthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingMarking_EthernetPriorityOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingMarking_EthernetPriorityOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingAvailableInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Layer2BridgingAvailableInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Layer2BridgingAvailableInterface_AvailableInterfaceKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingAvailableInterface_InterfaceType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Layer2BridgingAvailableInterface_InterfaceReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_MaxQueues(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_MaxClassificationEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_ClassificationNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_MaxAppEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_AppNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_MaxFlowEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_FlowNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_MaxPolicerEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_PolicerNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_MaxQueueEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_QueueNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_QueueStatsNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagement_DefaultForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_DefaultTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_DefaultPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_DefaultQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_DefaultDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_DefaultEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagement_DefaultEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagement_AvailableAppList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementClassification_ClassificationKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementClassification_ClassificationEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassificationEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassificationStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementClassification_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassificationOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassificationOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestIP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestIP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestIPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestIPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceIP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceIP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceIPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceIPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ProtocolExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ProtocolExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestPortRangeMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestPortRangeMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestPortExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestPortExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourcePort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourcePort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourcePortRangeMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourcePortRangeMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourcePortExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourcePortExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceMACMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceMACMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceMACExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceMACExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestMACMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestMACMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestMACExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestMACExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_Ethertype(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_Ethertype(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_EthertypeExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_EthertypeExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SSAP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SSAP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SSAPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SSAPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DSAP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DSAP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DSAPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DSAPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_LLCControl(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_LLCControl(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_LLCControlExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_LLCControlExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SNAPOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SNAPOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SNAPOUIExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SNAPOUIExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceUserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceUserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceUserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceUserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestUserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestUserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestUserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestUserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorSpecificInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorSpecificInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorSpecificInfoExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorSpecificInfoExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorSpecificInfoEnterprise(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorSpecificInfoEnterprise(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorSpecificInfoSubOption(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorSpecificInfoSubOption(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_SourceVendorSpecificInfoMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_SourceVendorSpecificInfoMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorSpecificInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorSpecificInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorSpecificInfoExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorSpecificInfoExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorSpecificInfoEnterprise(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorSpecificInfoEnterprise(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorSpecificInfoSubOption(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorSpecificInfoSubOption(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DestVendorSpecificInfoMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DestVendorSpecificInfoMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_TCPACK(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_TCPACK(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_TCPACKExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_TCPACKExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_IPLengthMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_IPLengthMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_IPLengthMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_IPLengthMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_IPLengthExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_IPLengthExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DSCPCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DSCPCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DSCPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DSCPExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_DSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_DSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_EthernetPriorityCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_EthernetPriorityCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_EthernetPriorityExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_EthernetPriorityExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_EthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_EthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_VLANIDCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_VLANIDCheck(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_VLANIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_VLANIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_OutOfBandInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_OutOfBandInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_TrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_TrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementClassification_ClassApp(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementClassification_ClassApp(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementApp_AppEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementApp_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_ProtocolIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_ProtocolIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementApp_AppDefaultEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementApp_AppDefaultEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementFlow_FlowEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementFlow_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowTypeParameters(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowTypeParameters(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_AppIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_AppIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowForwardingPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowTrafficClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowPolicer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowQueue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowDSCPMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementFlow_FlowEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementFlow_FlowEthernetPriorityMark(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PolicerKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_PolicerEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_PolicerEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PolicerStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_CommittedRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_CommittedRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_CommittedBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_CommittedBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_ExcessBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_ExcessBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PeakRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_PeakRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PeakBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_PeakBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_MeterType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_MeterType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PossibleMeterTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_ConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_ConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_PartialConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_PartialConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_NonConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementPolicer_NonConformingAction(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementPolicer_CountedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_CountedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_TotalCountedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_TotalCountedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_ConformingCountedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_ConformingCountedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_PartiallyConformingCountedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_PartiallyConformingCountedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_NonConformingCountedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementPolicer_NonConformingCountedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueue_QueueKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueue_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_QueueStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueue_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_TrafficClasses(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_TrafficClasses(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_QueueInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_QueueInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_QueueBufferLength(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueue_QueueWeight(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_QueueWeight(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_QueuePrecedence(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_QueuePrecedence(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_REDThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_REDThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_REDPercentage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_REDPercentage(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_DropAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_DropAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_SchedulerAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_SchedulerAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueue_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueue_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueueStats_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueueStats_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueueStats_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueueStats_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueueStats_Queue(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueueStats_Queue(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueueStats_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_QueueManagementQueueStats_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_QueueManagementQueueStats_OutputPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_OutputBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_DroppedPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_DroppedBytes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_QueueOccupancyPackets(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_QueueManagementQueueStats_QueueOccupancyPercentage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANConfigSecurity_ConfigPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANConfigSecurity_ConfigPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_DataBlockSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_DataBlockSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_IPPingDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_IPPingDiagnostics_SuccessCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_IPPingDiagnostics_FailureCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_IPPingDiagnostics_AverageResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_IPPingDiagnostics_MinimumResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_IPPingDiagnostics_MaximumResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_NumberOfTries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_NumberOfTries(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_DataBlockSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_DataBlockSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_MaxHopCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_TraceRouteDiagnostics_MaxHopCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_TraceRouteDiagnostics_ResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnostics_RouteHopsNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnosticsRouteHops_HopHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnosticsRouteHops_HopHostAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnosticsRouteHops_HopErrorCode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_TraceRouteDiagnosticsRouteHops_HopRTTimes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadDiagnostics_DownloadURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadDiagnostics_DownloadURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadDiagnostics_EthernetPriority(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadDiagnostics_EthernetPriority(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadDiagnostics_ROMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_BOMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_EOMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_TestBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_TotalBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_TCPOpenRequestTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadDiagnostics_TCPOpenResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_UploadURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_UploadURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_DSCP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_EthernetPriority(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_EthernetPriority(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_TestFileLength(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UploadDiagnostics_TestFileLength(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UploadDiagnostics_ROMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_BOMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_EOMTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_TotalBytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_TCPOpenRequestTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UploadDiagnostics_TCPOpenResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UDPEchoConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UDPEchoConfig_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UDPEchoConfig_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UDPEchoConfig_SourceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UDPEchoConfig_SourceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UDPEchoConfig_UDPPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UDPEchoConfig_UDPPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UDPEchoConfig_EchoPlusEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UDPEchoConfig_EchoPlusEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UDPEchoConfig_EchoPlusSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_PacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_PacketsResponded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_BytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_BytesResponded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_TimeFirstPacketReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UDPEchoConfig_TimeLastPacketReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDevice_LANEthernetInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDevice_LANUSBInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDevice_LANWLANConfigurationNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_DHCPServerConfigurable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_DHCPServerConfigurable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_DHCPServerEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_DHCPServerEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_DHCPRelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_MinAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_MinAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_MaxAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_MaxAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_ReservedAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_ReservedAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_DomainName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_DomainName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_IPRouters(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_IPRouters(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_DHCPLeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_DHCPLeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_UseAllocatedWAN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_UseAllocatedWAN(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_AssociatedConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_AssociatedConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_PassthroughLease(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_PassthroughLease(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_PassthroughMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_PassthroughMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_AllowedMACAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagement_AllowedMACAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagement_IPInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_DHCPStaticAddressNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_DHCPOptionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagement_DHCPConditionalPoolNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagementIPInterface_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementIPInterface_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementIPInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementIPInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceSubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceAddressingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementIPInterface_IPInterfaceAddressingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPStaticAddress_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPStaticAddress_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPStaticAddress_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPStaticAddress_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPStaticAddress_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPStaticAddress_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPStaticAddress_Yiaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPStaticAddress_Yiaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_PoolOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_PoolOrder(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_SourceInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_SourceInterface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_VendorClassIDMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ClientIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UserClassIDExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ChaddrMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ChaddrMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ChaddrExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ChaddrExclude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_LocallyServed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_LocallyServed(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_MinAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_MinAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_MaxAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_MaxAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ReservedAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_ReservedAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DomainName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DomainName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_IPRouters(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_IPRouters(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPLeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPLeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UseAllocatedWAN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_UseAllocatedWAN(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_AssociatedConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_AssociatedConnection(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPServerIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPServerIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPStaticAddressNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPool_DHCPOptionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Chaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Yiaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPStaticAddress_Yiaddr(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANHostConfigManagementDHCPConditionalServingPoolDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANEthernetInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfig_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANEthernetInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfig_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfig_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfig_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANEthernetInterfaceConfig_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfig_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANEthernetInterfaceConfig_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfig_DuplexMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANEthernetInterfaceConfig_DuplexMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANEthernetInterfaceConfigStats_BytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_BytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_PacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_PacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_ErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_ErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_UnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_UnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_DiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_DiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_MulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_MulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_BroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_BroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANEthernetInterfaceConfigStats_UnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANUSBInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANUSBInterfaceConfig_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANUSBInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANUSBInterfaceConfig_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceLANUSBInterfaceConfig_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceLANUSBInterfaceConfig_Standard(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_Rate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfig_Power(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_BytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_BytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_CellsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_CellsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_ErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_ErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_UnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_UnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_DiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_DiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_MulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_MulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_BroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_BroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceLANUSBInterfaceConfigStats_UnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_BSSID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_Channel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_Channel(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_AutoChannelEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_AutoChannelEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_SSID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_SSID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_BeaconType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_BeaconType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_MACAddressControlEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_Standard(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_WEPKeyIndex(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_WEPKeyIndex(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_KeyPassphrase(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_KeyPassphrase(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_WEPEncryptionLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_BasicEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_BasicEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_BasicAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_BasicAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_WPAEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_WPAEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_WPAAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_WPAAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_IEEE11iEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_IEEE11iEncryptionModes(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_IEEE11iAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_IEEE11iAuthenticationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_PossibleChannels(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_BasicDataTransmitRates(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_BasicDataTransmitRates(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_OperationalDataTransmitRates(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_OperationalDataTransmitRates(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_PossibleDataTransmitRates(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_InsecureOOBAccessEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_InsecureOOBAccessEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_BeaconAdvertisementEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_BeaconAdvertisementEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_SSIDAdvertisementEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_SSIDAdvertisementEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_RadioEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_RadioEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_TransmitPowerSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TransmitPower(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_TransmitPower(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_AutoRateFallBackEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_AutoRateFallBackEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_LocationDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_LocationDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_RegulatoryDomain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_RegulatoryDomain(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_TotalPSKFailures(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TotalIntegrityFailures(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_ChannelsInUse(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_DeviceOperationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_DeviceOperationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_DistanceFromRoot(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_DistanceFromRoot(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_PeerBSSID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_PeerBSSID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_AuthenticationServiceMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_AuthenticationServiceMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_WMMSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_UAPSDSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_WMMEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_WMMEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_UAPSDEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfiguration_UAPSDEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfiguration_TotalBytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TotalBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TotalPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TotalPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfiguration_TotalAssociations(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_AssociatedDeviceMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_AssociatedDeviceIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_AssociatedDeviceAuthenticationState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_LastRequestedUnicastCipher(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_LastRequestedMulticastCipher(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_LastPMKId(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationAssociatedDevice_LastDataTransmitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWEPKey_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWEPKey_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWEPKey_WEPKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWEPKey_WEPKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationPreSharedKey_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationPreSharedKey_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationPreSharedKey_PreSharedKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationPreSharedKey_PreSharedKey(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationPreSharedKey_KeyPassphrase(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationPreSharedKey_KeyPassphrase(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationPreSharedKey_AssociatedDeviceMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationPreSharedKey_AssociatedDeviceMACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_AIFSN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_AIFSN(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_ECWMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_ECWMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_ECWMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_ECWMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_TXOP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_TXOP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationAPWMMParameter_AckPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationAPWMMParameter_AckPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_AIFSN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_AIFSN(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_ECWMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_ECWMin(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_ECWMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_ECWMax(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_TXOP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_TXOP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationSTAWMMParameter_AckPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationSTAWMMParameter_AckPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationStats_ErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_ErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_UnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_UnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_DiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_DiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_MulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_MulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_BroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_BroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationStats_UnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPS_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPS_DeviceName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_DevicePassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPS_DevicePassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPS_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_ConfigMethodsSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_ConfigMethodsEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPS_ConfigMethodsEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPS_SetupLockedState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_SetupLock(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPS_SetupLock(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPS_ConfigurationState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_LastConfigurationError(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_RegistrarNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPS_RegistrarEstablished(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPSRegistrar_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPSRegistrar_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPSRegistrar_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANDeviceWLANConfigurationWPSRegistrar_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANDeviceWLANConfigurationWPSRegistrar_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceWLANConfigurationWPSRegistrar_DeviceName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHosts_HostNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_IPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_AddressSource(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_LeaseTimeRemaining(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_Layer2Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_VendorClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_ClientID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_UserClassID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_HostName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_InterfaceType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANDeviceHostsHost_Active(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANInterfaces_LANEthernetInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANInterfaces_LANUSBInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANInterfaces_LANWLANConfigurationNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_LANInterfacesLANEthernetInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANInterfacesLANEthernetInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANInterfacesLANUSBInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANInterfacesLANUSBInterfaceConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_LANInterfacesWLANConfiguration_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_LANInterfacesWLANConfiguration_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDevice_WANConnectionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_EnabledForInternet(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANCommonInterfaceConfig_EnabledForInternet(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANCommonInterfaceConfig_WANAccessType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_Layer1UpstreamMaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_Layer1DownstreamMaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_PhysicalLinkStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_WANAccessProvider(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_TotalBytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_TotalBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_TotalPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_TotalPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_MaximumActiveConnections(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfig_NumberOfActiveConnections(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfigConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANCommonInterfaceConfigConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANCommonInterfaceConfigConnection_ActiveConnectionDeviceContainer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANCommonInterfaceConfigConnection_ActiveConnectionServiceID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANDSLInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANDSLInterfaceConfig_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LinkEncapsulationSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LinkEncapsulationRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANDSLInterfaceConfig_LinkEncapsulationRequested(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANDSLInterfaceConfig_LinkEncapsulationUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ModulationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_StandardsSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_StandardUsed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LineEncoding(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_AllowedProfiles(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_CurrentProfile(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_PowerManagementState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_SuccessFailureCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LastStateTransmittedDownstream(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LastStateTransmittedUpstream(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UPBOKLE(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_MREFPSDds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_MREFPSDus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LIMITMASK(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_US0MASK(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DataPath(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_InterleaveDepth(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LPATH(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INTLVDEPTH(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INTLVBLOCK(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ActualInterleavingDelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ACTINP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INPREPORT(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_NFEC(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_RFEC(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LSYMB(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_TRELLISds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_TRELLISus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ACTSNRMODEds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ACTSNRMODEus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_VirtualNoisePSDds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_VirtualNoisePSDus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ACTUALCE(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LineNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UpstreamCurrRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DownstreamCurrRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UpstreamMaxRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DownstreamMaxRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UpstreamNoiseMargin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DownstreamNoiseMargin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_SNRMpbus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_SNRMpbds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INMIATOds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INMIATSds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INMCCds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_INMINPEQMODEds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UpstreamAttenuation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DownstreamAttenuation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_UpstreamPower(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_DownstreamPower(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATURVendor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATURCountry(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATURANSIStd(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATURANSIRev(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATUCVendor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATUCCountry(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATUCANSIStd(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ATUCANSIRev(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_TotalStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_ShowtimeStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_LastShowtimeStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_CurrentDayStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfig_QuarterHourStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ReceiveBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_TransmitBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_CellDelin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_LinkRetrain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_InitErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_LInit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_InitTimeouts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_LossOfFraming(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_LOF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ATUCErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_SeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ATUCSeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_FECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ATUCFECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_HECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ATUCHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsTotal_ATUCCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ReceiveBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_TransmitBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_CellDelin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_LinkRetrain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_InitErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_LInit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_InitTimeouts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_LossOfFraming(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_LOF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ATUCErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_SeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ATUCSeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_FECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ATUCFECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_HECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ATUCHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsShowtime_ATUCCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ReceiveBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_TransmitBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_CellDelin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_LinkRetrain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_InitErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_LInit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_InitTimeouts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_LossOfFraming(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_LOF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ATUCErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_SeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ATUCSeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_FECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ATUCFECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_HECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ATUCHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsLastShowtime_ATUCCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ReceiveBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_TransmitBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_CellDelin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_LinkRetrain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_InitErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_LInit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_InitTimeouts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_LossOfFraming(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_LOF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ATUCErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_SeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ATUCSeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_FECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ATUCFECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_HECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ATUCHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsCurrentDay_ATUCCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ReceiveBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_TransmitBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_CellDelin(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_LinkRetrain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_InitErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_LInit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_InitTimeouts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_LossOfFraming(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_LOF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ATUCErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_SeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ATUCSeverelyErroredSecs(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_FECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ATUCFECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_HECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ATUCHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigStatsQuarterHour_ATUCCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_HLOGMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_QLNMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SNRMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_LATNds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_LATNus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SATNds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLInterfaceConfigTestParams_SATNus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANEthernetInterfaceConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANEthernetInterfaceConfig_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfig_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfig_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANEthernetInterfaceConfig_MaxBitRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANEthernetInterfaceConfig_DuplexMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANEthernetInterfaceConfig_DuplexMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANEthernetInterfaceConfig_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANEthernetInterfaceConfig_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANEthernetInterfaceConfig_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANEthernetInterfaceConfig_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANEthernetInterfaceConfigStats_BytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfigStats_BytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfigStats_PacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANEthernetInterfaceConfigStats_PacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagement_ConnectionServiceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_WANConnectionDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_WANConnectionService(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_DestinationAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_LinkType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_ConnectionType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLConnectionManagementConnectionService_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_LoopDiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANDSLDiagnostics_LoopDiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANDSLDiagnostics_ACTPSDds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_ACTPSDus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_ACTATPds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_ACTATPus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINSCds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINSCus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLOGMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_LATNpbds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_LATNpbus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SATNds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SATNus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_HLINpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_QLNMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRGds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRGus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRMTds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_SNRMTus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_BITSpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_BITSpsus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANDSLDiagnostics_GAINSpsds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDevice_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDevice_WANIPConnectionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDevice_WANPPPConnectionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_LinkStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_LinkType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_LinkType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_AutoConfig(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ModulationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_DestinationAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_DestinationAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMEncapsulation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMEncapsulation(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_FCSPreserved(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_FCSPreserved(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_VCSearchList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_VCSearchList(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMAAL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMTransmittedBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMReceivedBlocks(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMQoS(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMQoS(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMPeakCellRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMPeakCellRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMMaximumBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMMaximumBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMSustainableCellRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMSustainableCellRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_AAL5CRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMCRCErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANDSLLinkConfig_ATMHECErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_SuccessCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_FailureCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_AverageResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_MinimumResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANATMF5LoopbackDiagnostics_MaximumResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPTMLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfig_LinkStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfig_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_BytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_BytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_FramesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_FramesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_OOSNearEnd(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_OOSFarEnd(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_ErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_ErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_UnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_UnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_DiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_DiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_MulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_MulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_BroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_BroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPTMLinkConfigStats_UnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANEthernetLinkConfig_EthernetLinkStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_LinkStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_ISPPhoneNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_ISPPhoneNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_ISPInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_ISPInfo(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_LinkType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_LinkType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_NumberOfRetries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_NumberOfRetries(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_DelayBetweenRetries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_DelayBetweenRetries(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_Fclass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_DataModulationSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_DataProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_DataCompression(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPOTSLinkConfig_PlusVTRCommandSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ConnectionStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_PossibleConnectionTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ConnectionType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_ConnectionType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_Uptime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_LastConnectionError(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_AutoDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_AutoDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_IdleDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_IdleDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_WarnDisconnectDelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_WarnDisconnectDelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_RSIPAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnection_NATEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_NATEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_AddressingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_AddressingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ExternalIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_ExternalIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_DefaultGateway(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_DefaultGateway(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_DNSEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_DNSEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_DNSOverrideAllowed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_DNSOverrideAllowed(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_MaxMTUSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_MaxMTUSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_MACAddressOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_MACAddressOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ConnectionTrigger(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_ConnectionTrigger(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_RouteProtocolRx(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_RouteProtocolRx(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnection_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnection_PortMappingNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClient_SentDHCPOptionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClient_ReqDHCPOptionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientSentDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Order(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Order(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Tag(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionDHCPClientReqDHCPOption_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingLeaseDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingLeaseDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_RemoteHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_RemoteHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_ExternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_ExternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_ExternalPortEndRange(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_ExternalPortEndRange(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_InternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_InternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_InternalClient(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_InternalClient(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANIPConnectionPortMapping_PortMappingDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetBytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetUnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetUnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetDiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetDiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetMulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetMulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetBroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetBroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANIPConnectionStats_EthernetUnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ConnectionStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PossibleConnectionTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ConnectionType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_ConnectionType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPoESessionID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_DefaultGateway(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Uptime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_LastConnectionError(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_AutoDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_AutoDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_IdleDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_IdleDisconnectTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_WarnDisconnectDelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_WarnDisconnectDelay(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_RSIPAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_NATEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_NATEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPEncryptionProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPCompressionProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPAuthenticationProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ExternalIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_ExternalIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_RemoteIPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_MaxMRUSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_MaxMRUSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_CurrentMRUSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_DNSEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_DNSEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_DNSOverrideAllowed(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_DNSOverrideAllowed(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_MACAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_MACAddressOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_MACAddressOverride(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_TransportType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPoEACName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_PPPoEACName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPoEServiceName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_PPPoEServiceName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ConnectionTrigger(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_ConnectionTrigger(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_RouteProtocolRx(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_RouteProtocolRx(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPLCPEcho(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PPPLCPEchoRetry(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_ShapingRate(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnection_ShapingBurstSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnection_PortMappingNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingEnabled(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingLeaseDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingLeaseDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_RemoteHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_RemoteHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_ExternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_ExternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_ExternalPortEndRange(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_ExternalPortEndRange(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_InternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_InternalPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_InternalClient(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_InternalClient(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_WANDeviceWANConnectionDeviceWANPPPConnectionPortMapping_PortMappingDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetBytesSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetBytesReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetErrorsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetErrorsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetUnicastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetUnicastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetDiscardPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetDiscardPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetMulticastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetMulticastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetBroadcastPacketsSent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetBroadcastPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_WANDeviceWANConnectionDeviceWANPPPConnectionStats_EthernetUnknownProtoPacketsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_User_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_User_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_User_RemoteAccessCapable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_RemoteAccessCapable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_User_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_User_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_User_Language(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_User_Language(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPMediaServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPMediaServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPMediaRenderer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPMediaRenderer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPWLANAccessPoint(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPWLANAccessPoint(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPQoSDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPQoSDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPQoSPolicyHolder(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPQoSPolicyHolder(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPIGD(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPIGD(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPDMBasicMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPDMBasicMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPDMConfigurationMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPDMConfigurationMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDevice_UPnPDMSoftwareMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_UPnPDevice_UPnPDMSoftwareMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_UPnPDeviceCapabilities_UPnPArchitecture(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPArchitectureMinorVer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPMediaServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPMediaRenderer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPWLANAccessPoint(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPBasicDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPQoSDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPQoSPolicyHolder(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPIGD(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPDMBasicMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPDMConfigurationMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDeviceCapabilities_UPnPDMSoftwareMgmt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscovery_RootDeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscovery_DeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscovery_ServiceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_USN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_LeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_Location(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_Server(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryRootDevice_LastUpdate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_USN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_LeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_Location(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_Server(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryDevice_LastUpdate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_USN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_LeaseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_Location(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_Server(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_LastUpdate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDiscoveryService_ParentDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescription_DeviceDescriptionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescription_DeviceInstanceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescription_ServiceInstanceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceDescription_URLBase(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceDescription_SpecVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceDescription_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_UDN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ParentDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_DiscoveryDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_DeviceType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_FriendlyName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_DeviceCategory(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_Manufacturer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ManufacturerOUI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ManufacturerURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ModelDescription(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ModelName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ModelNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_ModelURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_UPC(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionDeviceInstance_PresentationURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_ParentDevice(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_ServiceId(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_ServiceDiscovery(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_ServiceType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_SCPDURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_ControlURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_UPnPDescriptionServiceInstance_EventSubURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_HNDDeviceClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_DeviceCapability(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_HIDDeviceClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_ImageClassProfileID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_AudioClassProfileID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_AVClassProfileID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_MediaCollectionProfileID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DLNACapabilities_PrinterClassProfileID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReader_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SmartCardReader_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SmartCardReader_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SmartCardReader_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SmartCardReader_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReader_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReader_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SmartCardReader_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SmartCardReader_ResetTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReader_DecryptionFailedCounter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReader_DecryptionFailedNoKeyCounter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReaderSmartCard_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReaderSmartCard_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReaderSmartCard_Application(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReaderSmartCard_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SmartCardReaderSmartCard_ATR(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SelfTestDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SelfTestDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SelfTestDiagnostics_Results(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_DiagnosticsState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_Interface(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_HostName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_HostName(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_DNSServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_DNSServer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_Timeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_NSLookupDiagnostics_NumberOfRepetitions(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_NSLookupDiagnostics_SuccessCount(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnostics_ResultNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_AnswerType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_HostNameReturned(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_IPAddresses(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_DNSServerIP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_NSLookupDiagnosticsResult_ResponseTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Firewall_Config(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_Firewall_Config(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_Firewall_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Firewall_LastChange(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHosts_HostNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHost_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_USBHostsHost_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_USBHostsHost_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_USBHostsHost_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_USBHostsHost_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHost_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHost_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_USBHostsHost_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_USBHostsHost_PowerManagementEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_USBHostsHost_PowerManagementEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_USBHostsHost_USBVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHost_DeviceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_DeviceNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_USBVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_DeviceClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_DeviceSubClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_DeviceVersion(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_DeviceProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_ProductID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_VendorID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_Manufacturer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_ProductClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_Rate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_Parent(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_MaxChildren(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_IsSuspended(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_IsSelfPowered(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDevice_ConfigurationNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfiguration_ConfigurationNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfiguration_InterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfigurationInterface_InterfaceNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfigurationInterface_InterfaceClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfigurationInterface_InterfaceSubClass(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_USBHostsHostDeviceConfigurationInterface_InterfaceProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatistics_MinSampleInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatistics_MaxReportSamples(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatistics_SampleSetNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSet_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSet_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_SampleInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_SampleInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_ReportSamples(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_ReportSamples(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_TimeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_TimeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_FetchSamples(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_FetchSamples(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_ForceSample(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSet_ForceSample(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSet_ReportStartTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSet_ReportEndTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSet_SampleSeconds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSet_ParameterNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSetParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_Reference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_Reference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_SampleMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_SampleMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_CalculationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_CalculationMode(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_LowThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_LowThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_HighThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_PeriodicStatisticsSampleSetParameter_HighThreshold(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_PeriodicStatisticsSampleSetParameter_SampleSeconds(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSetParameter_SuspectData(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSetParameter_Values(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_PeriodicStatisticsSampleSetParameter_Failures(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadAvailabilityAnnouncement_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityAnnouncement_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadAvailabilityAnnouncement_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadAvailabilityAnnouncement_GroupNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadAvailabilityAnnouncementGroup_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityAnnouncementGroup_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadAvailabilityAnnouncementGroup_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityAnnouncementGroup_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadAvailabilityAnnouncementGroup_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadAvailabilityAnnouncementGroup_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityAnnouncementGroup_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadAvailabilityQuery_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityQuery_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DownloadAvailabilityQuery_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DownloadAvailabilityQuery_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DownloadAvailabilityQuery_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModules_ExecEnvNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModules_DeploymentUnitNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModules_ExecutionUnitNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_Reset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_Type(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_InitialRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_InitialRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_RequestedRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_RequestedRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_CurrentRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_InitialExecutionUnitRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecEnv_InitialExecutionUnitRunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecEnv_Vendor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_ParentExecEnv(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_AllocatedDiskSpace(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_AvailableDiskSpace(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_AllocatedMemory(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_AvailableMemory(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_ActiveExecutionUnits(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecEnv_ProcessorRefList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_UUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_DUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesDeploymentUnit_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesDeploymentUnit_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Resolved(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Description(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Vendor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_VendorLogList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_VendorConfigList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_ExecutionUnitList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesDeploymentUnit_ExecutionEnvRef(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_EUID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecutionUnit_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecutionUnit_Name(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_ExecEnvLabel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_RequestedState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecutionUnit_RequestedState(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecutionUnit_ExecutionFaultCode(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_ExecutionFaultMessage(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_AutoStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecutionUnit_AutoStart(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecutionUnit_RunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SoftwareModulesExecutionUnit_RunLevel(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SoftwareModulesExecutionUnit_Vendor(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_Description(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_DiskSpaceInUse(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_MemoryInUse(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_References(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_AssociatedProcessList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_VendorLogList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_VendorConfigList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_SupportedDataModelList(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SoftwareModulesExecutionUnit_ExecutionEnvRef(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_Security_CertificateNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_SecurityCertificate_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_SecurityCertificate_LastModif(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_SerialNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_Issuer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_NotBefore(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_NotAfter(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_Subject(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_SubjectAlt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_SecurityCertificate_SignatureAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_SupportedAlarmNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_MaxCurrentAlarmEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_CurrentAlarmNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_HistoryEventNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_ExpeditedEventNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmt_QueuedEventNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtSupportedAlarm_EventType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtSupportedAlarm_ProbableCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtSupportedAlarm_SpecificProblem(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtSupportedAlarm_PerceivedSeverity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtSupportedAlarm_ReportingMechanism(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FaultMgmtSupportedAlarm_ReportingMechanism(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FaultMgmtCurrentAlarm_AlarmIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_AlarmRaisedTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_AlarmChangedTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_ManagedObjectInstance(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_EventType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_ProbableCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_SpecificProblem(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_PerceivedSeverity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_AdditionalText(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtCurrentAlarm_AdditionalInformation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_EventTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_AlarmIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_NotificationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_ManagedObjectInstance(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_EventType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_ProbableCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_SpecificProblem(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_PerceivedSeverity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_AdditionalText(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtHistoryEvent_AdditionalInformation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_EventTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_AlarmIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_NotificationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_ManagedObjectInstance(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_EventType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_ProbableCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_SpecificProblem(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_PerceivedSeverity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_AdditionalText(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtExpeditedEvent_AdditionalInformation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_EventTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_AlarmIdentifier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_NotificationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_ManagedObjectInstance(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_EventType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_ProbableCause(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_SpecificProblem(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_PerceivedSeverity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_AdditionalText(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FaultMgmtQueuedEvent_AdditionalInformation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_ScanOnBoot(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_ScanOnBoot(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_ScanPeriodically(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_ScanPeriodically(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_PeriodicInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_PeriodicInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_PeriodicTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_PeriodicTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_ContinuousGPS(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_ContinuousGPS(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_ScanTimeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_ScanTimeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPS_ScanStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_ErrorDetails(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_LastScanTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_LastSuccessfulScanTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_LockedLatitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_LockedLongitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_NumberOfSatellites(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPS_GPSReset(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPS_GPSReset(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSContinuousGPSStatus_CurrentFix(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_GotFix(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_TimingGood(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_Latitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_Longitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_Elevation(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_LastFixTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_LastFixDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_FirstFixTimeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSContinuousGPSStatus_FirstFixTimeout(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSContinuousGPSStatus_SatellitesTracked(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_SatelliteTrackingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSContinuousGPSStatus_SatelliteTrackingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSContinuousGPSStatus_ReceiverStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_LocationType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPGPSContinuousGPSStatus_LockTimeOutDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSContinuousGPSStatus_LockTimeOutDuration(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_ServerURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_ServerURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_ServerPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_ServerPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_ReferenceLatitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_ReferenceLatitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_ReferenceLongitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPGPSAGPSServerConfig_ReferenceLongitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPGPSAGPSServerConfig_ServerInUse(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_CryptoProfileNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_IKESANumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_ChildSANumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_MaxVirtualInterfaces(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_VirtualInterfaceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_UseForCWMP(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnel_UseForCWMP(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnel_MaxChildSAPerIKE(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnel_MaxIKESessions(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelCryptoProfile_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_AuthMethod(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_AuthMethod(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_MaxChildSA(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_MaxChildSA(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IKEEncrypt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IKEEncrypt(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IKEPRF(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IKEPRF(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IKEIntegrity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IKEIntegrity(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IKEDH(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IKEDH(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_ESPEncrypt(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_ESPEncrypt(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_ESPIntegrity(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_ESPIntegrity(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IPsecWindowSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IPsecWindowSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IKERekeyLifetime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IKERekeyLifetime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IPsecRekeyLifetimeByte(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IPsecRekeyLifetimeByte(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_IPsecRekeyLifetimeTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_IPsecRekeyLifetimeTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_DPDTimer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_DPDTimer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_NATTKeepaliveTimer(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_NATTKeepaliveTimer(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_SecMaxFragSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_SecMaxFragSize(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelCryptoProfile_SecDFBit(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelCryptoProfile_SecDFBit(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelIKESA_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_PeerAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_CreationTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_IPAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_SubnetMask(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_DNSServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_DHCPServers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_IntegrityErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_OtherErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelIKESA_AuthErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_ParentID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_SPI(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_DirectionOutbound(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_CreationTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_Traffic(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_IntegrityErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelChildSA_ReplayErrors(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPTunnelVirtualInterface_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelVirtualInterface_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelVirtualInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelVirtualInterface_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelVirtualInterface_CryptoProfile(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelVirtualInterface_CryptoProfile(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPTunnelVirtualInterface_DSCPMarkPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPTunnelVirtualInterface_DSCPMarkPolicy(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmt_ConfigNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPPerfMgmtConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_URL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_PeriodicUploadInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_PeriodicUploadInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPPerfMgmtConfig_PeriodicUploadTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPPerfMgmtConfig_PeriodicUploadTime(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatform_Version(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatform_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatform_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatform_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatform_MaxNumberOfApplications(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatform_CurrentNumberofApplications(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_PresenceApplicationSupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_FemtoAwarenessAPISupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_SMSAPISupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_SubscribeToNotificationsOfSMSSentToApplicationSupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_QuerySMSDeliveryStatusSupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_MMSAPISupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_QueryMMSDeliveryStatusSupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_SubscribeToNotificationsOfMMSSentToApplicationSupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_TerminalLocationAPISupport(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_AuthenticationMethodsSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_AccessLevelsSupported(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_SendSMSTargetAddressType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformCapabilities_SendMMSTargetAddressType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformControl_AuthenticationMethod(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControl_AuthenticationMethod(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControl_TunnelInst(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControl_TunnelInst(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_FemtozoneID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_FemtozoneID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_NotificationsUserIdentifierMSISDN(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_NotificationsUserIdentifierMSISDN(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_SubscribeToNotificationsResponseCallbackData(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_SubscribeToNotificationsResponseCallbackData(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlFemtoAwareness_QueryFemtocellResponseTimezone(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlFemtoAwareness_QueryFemtocellResponseTimezone(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_MinSendSMSTimeInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_MinSendSMSTimeInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_EnableQuerySMSDeliveryStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_EnableQuerySMSDeliveryStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlSMS_EnableSubscribeToNotificationsOfMessageSentToApplication(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlSMS_EnableSubscribeToNotificationsOfMessageSentToApplication(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_MinSendMMSTimeInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_MinSendMMSTimeInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_EnableQueryMMSDeliveryStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_EnableQueryMMSDeliveryStatus(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlMMS_EnableSubscribeToNotificationsOfMessageSentToApplication(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlMMS_EnableSubscribeToNotificationsOfMessageSentToApplication(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_APIEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_QueueEnable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_Queueing(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_MaxAPIUsersNumber(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseLongitudeLatitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseLongitudeLatitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseAltitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseAltitude(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseTimestamp(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformControlTerminalLocation_QueryMobileLocationResponseTimestamp(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformMonitoring_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformMonitoring_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformMonitoring_MonitoringInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_FAPApplicationPlatformMonitoring_MonitoringInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_FAPApplicationPlatformMonitoring_AuthenticationRequestsReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoring_AuthenticationRequestsRejected(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_APIAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_APIUsers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_QueueState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_QueueNum(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_QueueReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringFemtoAwareness_QueueDiscarded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_APIAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_APIUsers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_QueueState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_QueueNum(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_QueueReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringSMS_QueueDiscarded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_APIAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_APIUsers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_QueueState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_QueueNum(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_QueueReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringMMS_QueueDiscarded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_APIAvailable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_APIUsers(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_QueueState(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_QueueNum(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_QueueReceived(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_FAPApplicationPlatformMonitoringTerminalLocation_QueueDiscarded(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkData_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkData_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_MinReportingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_Protocols(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_EncodingTypes(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_MaxNumberOfProfiles(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_MaxNumberOfParameterReferences(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkData_ProfileNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkDataProfile_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_Protocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_EncodingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_EncodingType(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_ReportingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_ReportingInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_TimeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_TimeReference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_StreamingHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_StreamingHost(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_StreamingPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_StreamingPort(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_StreamingSessionID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_StreamingSessionID(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_FileTransferURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_FileTransferURL(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_FileTransferUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_FileTransferUsername(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_FileTransferPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_FileTransferPassword(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_ControlFileFormat(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfile_ControlFileFormat(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_BulkDataProfile_ParameterNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_BulkDataProfileParameter_Reference(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_BulkDataProfileParameter_Reference(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DNSSD_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_DNSSD_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_DNSSD_ServiceNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_InstanceName(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_ApplicationProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_TransportProtocol(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Domain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Target(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_LastUpdate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Host(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_TimeToLive(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Priority(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_Weight(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDService_TextRecordNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDServiceTextRecord_Key(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_DNSSDServiceTextRecord_Value(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPP_ConnectionNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Username(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Password(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_Domain(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Domain(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_Resource(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_Resource(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_JabberID(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnection_Status(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnection_LastChangeDate(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnection_ServerConnectAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_ServerConnectAlgorithm(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_KeepAliveInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_KeepAliveInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_ServerConnectAttempts(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_ServerConnectAttempts(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_ServerRetryInitialInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_ServerRetryInitialInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_ServerRetryIntervalMultiplier(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_ServerRetryIntervalMultiplier(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_ServerRetryMaxInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_ServerRetryMaxInterval(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_UseTLS(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnection_UseTLS(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnection_TLSEstablished(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnection_ServerNumberOfEntries(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnectionServer_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_Enable(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionServer_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_Alias(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionServer_Priority(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_Priority(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionServer_Weight(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_Weight(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionServer_ServerAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_ServerAddress(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionServer_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int set_XMPPConnectionServer_Port(char *refparam, struct dmctx *ctx, void *data, char *instance, char *value, int action);
int get_XMPPConnectionStats_ReceivedMessages(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnectionStats_TransmittedMessages(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnectionStats_ReceivedErrorMessages(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);
int get_XMPPConnectionStats_TransmittedErrorMessages(char *refparam, struct dmctx *ctx, void *data, char *instance, char **value);

#endif //__ROOTINTERNETGATEWAYDEVICE_H
